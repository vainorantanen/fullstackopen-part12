version: '3.8'

services:
  app:
    image: phonebook-frontend-prod
    build:
      context: ./phonebook-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    ports:
      - 5001:80
    volumes:
      - ./phonebook-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: phonebook-frontend-prod
  
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./phonebook-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./phonebook-backend/mongo_data:/data/db
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./phonebook-backend/redis_data:/data
    
  server:
    build:
      context: ./phonebook-backend
      dockerfile: Dockerfile  # Use the dev.Dockerfile for building the image
    volumes:
      - ./phonebook-backend/:/usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
  
  debug-helper:
    image: busybox
  
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-phonebook
    depends_on:
      - app # wait for the frontend container to be started
    
